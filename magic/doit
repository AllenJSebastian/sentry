#!/usr/bin/env bash

# TODO:
# - bold the postcondition notifications

# TODO: LDFLAGS for macos packages. I think we only need libxmlsec1 these days btw.
# We should also pkg-config instead of hardcoding.
PIP="python -m pip --disable-pip-version-check"
PIP_VERSION=19.2.3

# operate in the git root - we're assuming this for all relative paths
cd "$(git rev-parse --show-toplevel)"

step_python () {
    # TODO: install via brew if on macos
    echo lol
}

step_python_postcondition () {
    echo "Making sure python2.7 is available..."
    # TODO: use python to assert sys.version 2, 17
    return $?
}

step_pip () {
    # TODO: use python2.7 -m pip to install
    :
}

step_pip_postcondition () {
    echo "Making sure pip ${PIP_VERSION} is installed..."
    # TODO
    return $?
}

# TODO: system packages/build requirements, assume brew for now

# TODO: ensure virtualenv
# one pain point is automatically sourcing the virtualenv...
# we can't do it from here, but we could introduce some magic like direnv

step_venv () {
    # this is a noop, since venv-update is the best way to check AND ensure
    # the postcondition
    :
}

# TODO: should we separately assert that sentry is installed, or do it here?
# TODO:currently, we aren't using pip-faster, but I'd like to eventually.
step_venv_postcondition () {
    echo "Making sure the virtualenv is up to date with sentry's requirements..."
    ./magic/bin/venv-update \
        venv= -ppython2.7 ./.venv \
        install= -r requirements-base.txt -r requirements-dev.txt \
        pip-command= $PIP install
    return $?
}

# TODO: git hooks, pre-commit

# TODO: sentry init, devservices, node/yarn stuff, webpack stuff...

# TODO set e and pipefail with a trap to report unsuccessful

for step in \
    step_python \
    step_pip \
    step_venv \
    ; do
    "${step}_postcondition" || "$step"
    # "${step}_postcondition" || die
done
